# test/Jamfile.v2 controls building of MSM Library unit tests
#
# Copyright (c) 2010 Christophe Henry
#
# Use, modification and distribution is subject to the Boost Software License,
# Version 1.0. (See accompanying file LICENSE_1_0.txt or copy at
# http://www.boost.org/LICENSE_1_0.txt)

require-b2 5.2 ;

# bring in rules for testing
import testing ;
import os ;
import-search /boost/config/checks ;
import config : requires ;

project
    :
    requirements
       <library>/boost/msm//boost_msm
       <include>.
       <toolset>gcc:<cxxflags>"-ftemplate-depth-300 -g0"
       <toolset>darwin:<cxxflags>"-ftemplate-depth-300 -g0"
       <toolset>intel:<cxxflags>"-g0"
       <toolset>gcc:<optimization>off
       <toolset>darwin:<optimization>off
       <toolset>intel:<optimization>off
       <library>/boost/test//boost_unit_test_framework/<link>static
       <library>/boost/serialization//boost_serialization/<link>static
    ;

test-suite msm-unit-tests
    :
    [ run Anonymous.cpp ]
    [ run AnonymousAndGuard.cpp ]
    [ run AnonymousEuml.cpp ]
    [ run Back11CompositeMachine.cpp ]
    [ run BigWithFunctors.cpp ]
    # MSVC 32-bit runs out of memory when compiling this test
    [ run CompositeEuml.cpp : : : <toolset>msvc-14.3,<address-model>32:<build>no ]
    [ run CompositeMachine.cpp ]
    [ run Constructor.cpp ]
    [ run Entries.cpp ]
    [ run EventQueue.cpp ]
    [ run History.cpp ]
    [ run KleeneDeferred.cpp ]
    [ run ManyDeferTransitions.cpp ]
    [ run OrthogonalDeferred.cpp ]
    [ run OrthogonalDeferred2.cpp ]
    [ run OrthogonalDeferred3.cpp ]
    # MSVC 32-bit runs out of memory when compiling this test
    [ run OrthogonalDeferredEuml.cpp : : : <toolset>msvc-14.3,<address-model>32:<build>no ]
    # GCC has a bug in std::type_info::before() that leads to a segfault.
    # Only observable on Windows, though (https://github.com/boostorg/msm/issues/114).
    [ run Serialize.cpp : : : <toolset>gcc,<target-os>windows:<build>no ]
    [ run SerializeSimpleEuml.cpp : : : <toolset>gcc,<target-os>windows:<build>no ]
    [ run SerializeWithHistory.cpp : : : <toolset>gcc,<target-os>windows:<build>no ]
    [ run SetStates.cpp ]
    [ run SimpleEuml.cpp ]
    [ run SimpleEuml2.cpp ]
    [ run SimpleInternal.cpp ]
    [ run SimpleInternalEuml.cpp ]
    [ run SimpleInternalFunctors.cpp ]
    [ run SimpleMachine.cpp ]
    [ run SimpleWithFunctors.cpp ]
    [ run Test2RegionsAnonymous.cpp ]
    [ run TestConstructor.cpp ]
    [ run TestConstructorMovableOnlyTypes.cpp ]
    [ run TestDeferAndMessageQueue.cpp ]
    [ run TestDeferAndMessageQueue2.cpp ]
    [ run TestDeferAndMessageQueue3.cpp ]
    [ run TestDeferIn2Regions.cpp ]
    [ run Throwing.cpp ]
    [ run TransitionSkipping.cpp ]
    ;

test-suite msm-unit-tests-cxxstd17
    :
    [ run Backmp11Constructor.cpp ]
    [ run Backmp11Visitor.cpp ]
    [ run Backmp11RootSm.cpp ]
    :
    <cxxstd>17
    ;

test-suite msm-unit-tests-cxxstd20
    :
    # MSVC 32-bit runs out of memory when compiling this test
    [ run Back11OrthogonalDeferred3WithPuml.cpp : : : <toolset>msvc-14.3,<address-model>32:<build>no ]
    [ run OnlyStringPuml.cpp ]
    [ run puml_syntax.cpp ]
    [ run puml_syntax_2.cpp ]
    [ run SimpleWithPuml.cpp ]
    [ run SimpleInternalWithPuml.cpp ]
    [ run StringTerminatePuml.cpp ]
    :
    <cxxstd>20
    # Clang 11 and 12 don't support lambdas in unevaluated contexts
    <toolset>clang-11:<build>no
    <toolset>clang-12:<build>no
    ;
